name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0'
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Create .env file
      run: |
        cat << EOF > .env
        DOCKER_USER=${{ secrets.DOCKER_USER }}
        COMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }}
        USER_ID=1000
        GROUP_ID=1000
        API_PORT=${{ secrets.API_PORT }}
        DB_HOST=localhost
        DB_NAME=${{ secrets.DB_NAME }}
        DB_USER=${{ secrets.DB_USER }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_PORT=${{ secrets.DB_PORT }}
        EOF
    
    - name: Build and push Docker image
      run: |
        # Step 1: Restore NuGet packages
        dotnet restore

        # Step 2: Build and push Docker image
        IMAGE_NAME=${{ secrets.DOCKER_USER }}/${{ secrets.COMPOSE_PROJECT_NAME }}-web-api
        docker build -t "${IMAGE_NAME}:latest" \
          -f .docker/aspnet/Dockerfile \
          --build-arg USER_ID=1000 \
          --build-arg GROUP_ID=1000 \
          --build-arg ENVIRONMENT=development .
        
        # Push the image
        docker push "${IMAGE_NAME}:latest"
    
    - name: Install Docker on remote server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $USER
          fi
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
    
    - name: Deploy to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: ".deployment/*"
        target: "/"
        strip_components: 1
    
    - name: Execute remote commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          sudo make clean
          sudo make setup